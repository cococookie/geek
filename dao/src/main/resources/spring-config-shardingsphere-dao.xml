<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:sharding="http://shardingsphere.apache.org/schema/shardingsphere/sharding"
       xmlns:shardingsphere="http://shardingsphere.apache.org/schema/shardingsphere/datasource"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
                        http://www.springframework.org/schema/beans/spring-beans.xsd
                        http://shardingsphere.apache.org/schema/shardingsphere/sharding
                        http://shardingsphere.apache.org/schema/shardingsphere/sharding/sharding.xsd http://shardingsphere.apache.org/schema/shardingsphere/datasource http://shardingsphere.apache.org/schema/shardingsphere/datasource/datasource.xsd">

    <bean id="db_0" class="com.alibaba.druid.pool.DruidDataSource"  destroy-method="close">
        <property name="driverClassName" value="com.mysql.jdbc.Driver"/>
        <property name="url"
                  value="jdbc:mysql://127.0.0.1:3306/db_0?serverTimezone=UTC&amp;useSSL=false"/>
        <property name="username" value="root"/>
        <property name="password" value=""/>
    </bean>

    <bean id="db_1" class="com.alibaba.druid.pool.DruidDataSource"  destroy-method="close">
        <property name="driverClassName" value="com.mysql.jdbc.Driver"/>
        <property name="url"
                  value="jdbc:mysql://127.0.0.1:3306/db_1?serverTimezone=UTC&amp;useSSL=false"/>
        <property name="username" value="root"/>
        <property name="password" value=""/>
    </bean>


    <!--&lt;!&ndash; 配置分库策略 &ndash;&gt;-->
    <!--<sharding:sharding-algorithm id="database_inline" type="INLINE">-->
        <!--<props>-->
            <!--<prop key="algorithm-expression">db_${user_id % 2}</prop>-->
        <!--</props>-->
    <!--</sharding:sharding-algorithm>-->
    <!--<sharding:standard-strategy id="dbStrategy" sharding-column="user_id" algorithm-ref="database_inline" />-->

    <!--&lt;!&ndash; 配置分表策略 &ndash;&gt;-->
    <!--<sharding:sharding-algorithm id="order_inline" type="INLINE">-->
        <!--<props>-->
            <!--<prop key="algorithm-expression">order_${order_id % 2}</prop>-->
        <!--</props>-->
    <!--</sharding:sharding-algorithm>-->
    <!--<sharding:standard-strategy id="tableStrategy" sharding-column="order_id" algorithm-ref="order_inline" />-->

    <!--&lt;!&ndash; 配置分布式id生成策略 &ndash;&gt;-->
    <!--<sharding:key-generate-algorithm id="snowflakeAlgorithm" type="SNOWFLAKE">-->
        <!--<props>-->
            <!--<prop key="worker-id">123</prop>-->
        <!--</props>-->
    <!--</sharding:key-generate-algorithm>-->
    <!--<sharding:key-generate-strategy id="orderKeyGenerator" column="order_id" algorithm-ref="snowflakeAlgorithm" />-->

    <!--&lt;!&ndash; 配置sharding策略 &ndash;&gt;-->
    <!--<sharding:rule id="shardingRule">-->
        <!--<sharding:table-rules>-->
            <!--<sharding:table-rule logic-table="order" actual-data-nodes="db_${0..1}.order_${0..1}" database-strategy-ref="dbStrategy" table-strategy-ref="tableStrategy" key-generate-strategy-ref="orderKeyGenerator" />-->
        <!--</sharding:table-rules>-->
    <!--</sharding:rule>-->

    <!--&lt;!&ndash; 配置ShardingSphereDataSource &ndash;&gt;-->
    <!--<shardingsphere:data-source id="shardingDataSource" data-source-names="db_0,db_1" rule-refs="shardingRule">-->
        <!--<props>-->
            <!--<prop key="sql-show">true</prop>-->
        <!--</props>-->
    <!--</shardingsphere:data-source>-->


    <!--<bean id="transactionManager"-->
          <!--class="org.springframework.jdbc.datasource.DataSourceTransactionManager">-->
        <!--<property name="dataSource" ref="shardingDataSource" />-->
    <!--</bean>-->

    <!--<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">-->
        <!--<property name="dataSource" ref="shardingDataSource"/>-->
        <!--<property name="configLocation" value="classpath:/sqlmap-config.xml"/>-->
        <!--<property name="mapperLocations">-->
            <!--<list>-->
                <!--<value>classpath*:sqlmap/**Mapper.xml</value>-->
            <!--</list>-->
        <!--</property>-->
    <!--</bean>-->

    <!--<bean id="sqlSession" class="org.mybatis.spring.SqlSessionTemplate">-->
        <!--<constructor-arg index="0" ref="sqlSessionFactory"/>-->
    <!--</bean>-->
</beans>